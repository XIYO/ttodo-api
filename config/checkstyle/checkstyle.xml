<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
    <property name="charset" value="UTF-8"/>
    <property name="severity" value="warning"/>
    <property name="fileExtensions" value="java"/>

    <!-- Suppressions -->
    <module name="SuppressionFilter">
        <property name="file" value="${config_loc}/suppressions.xml"/>
    </module>

    <!-- 파일 길이 제한 -->
    <module name="FileLength">
        <property name="max" value="500"/>
    </module>

    <module name="TreeWalker">
        <!-- 매직 넘버 검사 -->
        <module name="MagicNumber">
            <property name="ignoreNumbers" value="-1, 0, 1"/>
            <property name="ignoreHashCodeMethod" value="true"/>
            <property name="ignoreAnnotation" value="true"/>
            <property name="ignoreFieldDeclaration" value="false"/>
            <property name="ignoreAnnotationElementDefaults" value="true"/>
            <property name="constantWaiverParentToken"
                      value="TYPECAST, METHOD_CALL, EXPR, ARRAY_INIT, UNARY_MINUS, UNARY_PLUS, ELIST, STAR, ASSIGN, PLUS, MINUS, DIV, LITERAL_NEW"/>
        </module>

        <!-- 하드코딩된 문자열 검사를 위한 정규표현식 -->
        <module name="RegexpSinglelineJava">
            <property name="format" value="(20|30|50|60|100|200|255|1000|10000|3600|86400)"/>
            <property name="ignoreComments" value="true"/>
            <property name="message" value="하드코딩된 숫자 대신 상수를 사용하세요"/>
        </module>

        <!-- ROLE_ 문자열 직접 사용 방지 -->
        <module name="RegexpSinglelineJava">
            <property name="format" value="&quot;ROLE_[A-Z]+&quot;"/>
            <property name="ignoreComments" value="true"/>
            <property name="message" value="Role 문자열은 SecurityProperties나 Role enum을 통해 관리하세요"/>
        </module>

        <!-- API 경로 하드코딩 방지 -->
        <module name="RegexpSinglelineJava">
            <property name="format" value="&quot;/api/[a-z]+"/>
            <property name="ignoreComments" value="true"/>
            <property name="message" value="API 경로는 ApiPaths 상수를 사용하세요"/>
        </module>

        <!-- 에러 코드 하드코딩 방지 -->
        <module name="RegexpSinglelineJava">
            <property name="format" value="&quot;(CONFLICT|UNAUTHORIZED|FORBIDDEN|BAD_REQUEST|INTERNAL_ERROR)&quot;"/>
            <property name="ignoreComments" value="true"/>
            <property name="message" value="에러 코드는 ErrorCode enum을 사용하세요"/>
        </module>

        <!-- 사용하지 않는 Import -->
        <module name="UnusedImports"/>

        <!-- 와일드카드 Import 제한 (일반 임포트는 허용) -->
        <module name="AvoidStarImport">
            <property name="allowClassImports" value="true"/>
            <property name="allowStaticMemberImports" value="false"/>
        </module>

        <!-- 상수 명명 규칙 -->
        <module name="ConstantName">
            <property name="format" value="^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$"/>
        </module>

        <!-- 매개변수 개수 제한 -->
        <module name="ParameterNumber">
            <property name="max" value="7"/>
            <property name="ignoreOverriddenMethods" value="true"/>
        </module>

        <!-- 메서드 길이 제한 -->
        <module name="MethodLength">
            <property name="tokens" value="METHOD_DEF"/>
            <property name="max" value="50"/>
            <property name="countEmpty" value="false"/>
        </module>

        <!-- ===== Lombok 사용 완전 강제 규칙 (모든 기존 코드 포함) ===== -->
        <!-- 이 규칙들은 새 코드뿐만 아니라 모든 기존 코드에도 적용됩니다 -->

        <!-- 1. 단순 getter 메서드 완전 금지 -->
        <!-- 패턴: return this.field; 또는 return field; 형태의 단순 반환 -->
        <module name="RegexpSinglelineJava">
            <property name="format"
                      value="^\s*(public|protected)\s+\w+\s+get[A-Z]\w*\s*\(\s*\)\s*\{\s*return\s+(this\.)?\w+\s*;\s*\}"/>
            <property name="ignoreComments" value="true"/>
            <property name="message" value="[LOMBOK 강제] 단순 getter는 반드시 Lombok @Getter를 사용하세요. 비즈니스 로직이 있는 메서드만 허용됩니다."/>
        </module>

        <!-- 2. 단순 setter 메서드 완전 금지 -->
        <!-- 패턴: this.field = value; 형태의 단순 할당 -->
        <module name="RegexpSinglelineJava">
            <property name="format"
                      value="^\s*(public|protected)\s+void\s+set[A-Z]\w*\s*\([^)]+\)\s*\{\s*this\.\w+\s*=\s*\w+\s*;\s*\}"/>
            <property name="ignoreComments" value="true"/>
            <property name="message" value="[LOMBOK 강제] 단순 setter는 반드시 Lombok @Setter를 사용하세요. 검증 로직이 있는 메서드만 허용됩니다."/>
        </module>

        <!-- 3. 빈 생성자 완전 금지 -->
        <module name="RegexpSinglelineJava">
            <property name="format" value="^\s*(public|protected|private)\s+[A-Z][a-zA-Z0-9]*\s*\(\s*\)\s*\{\s*\}"/>
            <property name="ignoreComments" value="true"/>
            <property name="message" value="[LOMBOK 강제] 빈 생성자는 반드시 Lombok @NoArgsConstructor를 사용하세요"/>
        </module>

        <!-- 4. toString() 메서드 수동 구현 완전 금지 -->
        <module name="RegexpSinglelineJava">
            <property name="format" value="^\s*public\s+String\s+toString\s*\(\s*\)\s*\{"/>
            <property name="ignoreComments" value="true"/>
            <property name="message" value="[LOMBOK 강제] toString()은 반드시 Lombok @ToString을 사용하세요"/>
        </module>

        <!-- 5. equals() 메서드 수동 구현 완전 금지 -->
        <module name="RegexpSinglelineJava">
            <property name="format" value="^\s*public\s+boolean\s+equals\s*\(\s*Object\s+\w+\s*\)\s*\{"/>
            <property name="ignoreComments" value="true"/>
            <property name="message" value="[LOMBOK 강제] equals()는 반드시 Lombok @EqualsAndHashCode를 사용하세요"/>
        </module>

        <!-- 6. hashCode() 메서드 수동 구현 완전 금지 -->
        <module name="RegexpSinglelineJava">
            <property name="format" value="^\s*public\s+int\s+hashCode\s*\(\s*\)\s*\{"/>
            <property name="ignoreComments" value="true"/>
            <property name="message" value="[LOMBOK 강제] hashCode()는 반드시 Lombok @EqualsAndHashCode를 사용하세요"/>
        </module>

        <!-- 7. 여러 줄 getter 메서드도 감지 (비즈니스 로직 없는 경우) -->
        <module name="RegexpSinglelineJava">
            <property name="format" value="^\s*(public|protected)\s+\w+\s+get[A-Z]\w*\s*\(\s*\)\s*\{$"/>
            <property name="ignoreComments" value="true"/>
            <property name="message" value="[LOMBOK 강제] getter 메서드는 Lombok @Getter를 사용하거나 비즈니스 로직을 포함해야 합니다"/>
        </module>

        <!-- 8. 여러 줄 setter 메서드도 감지 (검증 로직 없는 경우) -->
        <module name="RegexpSinglelineJava">
            <property name="format" value="^\s*(public|protected)\s+void\s+set[A-Z]\w*\s*\([^)]+\)\s*\{$"/>
            <property name="ignoreComments" value="true"/>
            <property name="message" value="[LOMBOK 강제] setter 메서드는 Lombok @Setter를 사용하거나 검증 로직을 포함해야 합니다"/>
        </module>

        <!-- ResponseEntity import 금지 -->
        <module name="IllegalImport">
            <property name="illegalClasses" value="org.springframework.http.ResponseEntity"/>
        </module>

    </module>

    <!-- 줄 길이 제한 -->
    <module name="LineLength">
        <property name="max" value="120"/>
        <property name="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
    </module>
</module>
