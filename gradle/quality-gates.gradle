/**
 * 품질 게이트 통합 설정
 * IntelliJ IDEA Ultimate 내장 검사 도구 사용
 */

// ===== 품질 체크 통합 태스크 (IntelliJ 기반) =====
task qualityGate {
    group = 'verification'
    description = 'Run quality checks (Tests, Coverage) - Use IntelliJ inspections for code analysis'

    dependsOn 'test'
    dependsOn 'jacocoTestReport'

    doLast {
        println """
        ========================================
        품질 검사 완료! (IntelliJ 기반)
        ========================================
        ✅ 테스트: PASSED
        ✅ 커버리지: build/reports/jacoco/test/html/
        
        📋 IntelliJ IDEA에서 추가 검사:
        - Code Inspection (Analyze → Inspect Code)
        - All Inspections Profile 활성화됨
        - Save Actions 플러그인 활성화됨
        
        SonarCloud 분석 실행:
        ./gradlew sonar -Dsonar.token=YOUR_TOKEN
        ========================================
        """
    }
}

// Google 스타일로 전환
task switchToGoogleStyle {
    group = 'verification'
    description = 'Switch to Google Java Style'
    doLast {
        println "Switched to Google Java Style. Run with: ./gradlew build -PuseGoogleStyle"
    }
}

// 엄격한 품질 검사 (CI/CD용)
task strictQualityCheck {
    group = 'verification'
    description = 'Strict quality check for CI/CD'

    dependsOn qualityGate

    doLast {
        // 커버리지 체크
        def coverageReport = file("build/reports/jacoco/test/jacocoTestReport.xml")
        if (coverageReport.exists()) {
            println "Coverage report generated"
        } else {
            throw new GradleException("Coverage report not found!")
        }
    }
}

// SonarCloud와 로컬 검사 모두 실행
task fullQualityAnalysis {
    group = 'verification'
    description = 'Run local quality checks and SonarCloud analysis'

    dependsOn qualityGate
    finalizedBy 'sonar'
}